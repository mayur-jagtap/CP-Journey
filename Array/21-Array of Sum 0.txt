Input: n = 5
Output: [-7,-1,1,3,4]
Explanation: These arrays also are accepted [-5,-1,1,2,3] , [-3,-1,2,-2,4].

my sol:
int* sumZero(int n, int* returnSize){
    int* a = malloc(n*sizeof(int));
    int start,j,i;
    a[0]=-1;
    for(i=1;i<n/2;i++){
        a[i] = a[i-1] - 1;
    }
    if(n%2==0){
        start = n/2;
    }else{
        start =n/2 + 1;
        a[n/2]=0;
    }
    j=0;
    for(i=start;i<n;i++){
        a[i] = -a[j];
        j++;
    }
    
    *returnSize = n;
    return a;
}


best sol:
int* sumZero(int n, int* returnSize){
    *returnSize = n;
    int* resultArr = (int*)malloc(sizeof(int*)*n);
    if(n%2==0)
    {
        resultArr[0] = (-2)*n/2;
        for(int i= 1;i<n;i++)
        {
            resultArr[i]= resultArr[i-1]+2;
            if(resultArr[i]==0)
            {
                resultArr[i]+=2;
            }
        }
        
    }
    else
    {
        resultArr[0] = (-2)*(n-1)/2;
        for(int i= 1;i<n;i++)
        {
            if(i==n/2)
            {
                resultArr[i] = 0;
                
            }
            else{
             resultArr[i]= resultArr[i-1]+2;
            }
        }
        
    }
    return resultArr;

}
